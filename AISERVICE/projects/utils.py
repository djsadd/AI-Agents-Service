import requests
import logging
from .models import Integration

logger = logging.getLogger(__name__)


def update_telegram_webhook(instance: Integration):
    if instance.integration_type != 'telegram':
        logger.info("üîÅ –ü—Ä–æ–ø—É—â–µ–Ω–æ: –Ω–µ telegram-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è")
        return

    bot_token = instance.config.get('bot_token')
    if not bot_token:
        logger.warning("‚õî –ù–µ –Ω–∞–π–¥–µ–Ω bot_token –≤ config")
        return

    SERVICE_BASE_URL = 'https://8784e0b036d5.ngrok-free.app'  # –∑–∞–º–µ–Ω–∏—Ç—å
    webhook_url = f"{SERVICE_BASE_URL}/webhook/{bot_token}/"

    try:
        check = requests.get(f"https://api.telegram.org/bot{bot_token}/getWebhookInfo", timeout=10)
        current_url = check.json().get("result", {}).get("url", "")

        if current_url == webhook_url:
            logger.info(f"‚úÖ Webhook —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")
        else:
            response = requests.post(
                f"https://api.telegram.org/bot{bot_token}/setWebhook",
                json={"url": webhook_url},
                timeout=10
            )

            if response.status_code == 200:
                logger.info(f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–æ–≤—ã–π webhook: {webhook_url}")
            else:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {response.status_code} ‚Äî {response.text}")
                return

        if instance.config.get('webhook_url') != webhook_url:
            new_config = instance.config.copy()
            new_config['webhook_url'] = webhook_url
            Integration.objects.filter(pk=instance.pk).update(config=new_config)
            logger.info("üìù Config –æ–±–Ω–æ–≤–ª—ë–Ω —Å webhook_url")

    except Exception as e:
        logger.exception(f"üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å Telegram API: {e}")
